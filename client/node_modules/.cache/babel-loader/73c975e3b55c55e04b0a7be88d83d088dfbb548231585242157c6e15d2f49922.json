{"ast":null,"code":"var _jsxFileName = \"/Users/anilvarma/Documents/GitHub/contact-manager/client/src/routes/contactDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport restaurantsFinder from '../apis/restaurantsFinder';\nimport RestaurantsContext from '../context/contactsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactDetails = () => {\n  _s();\n  const params = useParams();\n  const id = params.id;\n  const {\n    selectedContacts,\n    setSelectedContacts\n  } = useContext(RestaurantsContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await restaurantsFinder.get(`/${id}`);\n        setSelectedContacts(response.data.data.restaurant);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedContacts && console.log('Selected Contacts')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactDetails, \"XWilHBsTR+uCJ0/uQ6vsjiXbPKk=\", false, function () {\n  return [useParams];\n});\n_c = ContactDetails;\nexport default ContactDetails;\nvar _c;\n$RefreshReg$(_c, \"ContactDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useParams","restaurantsFinder","RestaurantsContext","ContactDetails","params","id","selectedContacts","setSelectedContacts","fetchData","response","get","data","restaurant","err","console","log"],"sources":["/Users/anilvarma/Documents/GitHub/contact-manager/client/src/routes/contactDetails.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport restaurantsFinder from '../apis/restaurantsFinder';\nimport RestaurantsContext from '../context/contactsContext'\n\nconst ContactDetails = () => {\n    const params = useParams()\n    const id = params.id\n    const { selectedContacts, setSelectedContacts } = useContext(RestaurantsContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await restaurantsFinder.get(`/${id}`)\n                setSelectedContacts(response.data.data.restaurant)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        fetchData()\n    })\n    return (\n        <div>\n            {selectedContacts && console.log('Selected Contacts')}\n        </div>\n    )\n}\n\nexport default ContactDetails\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,kBAAkB,MAAM,4BAA4B;AAAA;AAE3D,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAM;IAAEC,gBAAgB;IAAEC;EAAoB,CAAC,GAAGT,UAAU,CAACI,kBAAkB,CAAC;EAEhFH,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,iBAAiB,CAACS,GAAG,CAAE,IAAGL,EAAG,EAAC,CAAC;QACtDE,mBAAmB,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC;MACtD,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IACDL,SAAS,EAAE;EACf,CAAC,CAAC;EACF,oBACI;IAAA,UACKF,gBAAgB,IAAIQ,OAAO,CAACC,GAAG,CAAC,mBAAmB;EAAC;IAAA;IAAA;IAAA;EAAA,QACnD;AAEd,CAAC;AAAA,GArBKZ,cAAc;EAAA,QACDH,SAAS;AAAA;AAAA,KADtBG,cAAc;AAuBpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}